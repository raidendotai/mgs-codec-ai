import{d as g}from"./chunk-EL7DUS2A.js";import{a as c,i as E,j as O,k as A,l as B,n as f,o as v}from"./chunk-AOCDFDRO.js";import{d as T,e as d,f as m,g as e,i as _}from"./chunk-Y3AVQXKT.js";_();var p,y,s,o,w,u,R,z=class{constructor(){d(this,s);this.serializers={...O};this.parsers={...E};d(this,p,!1);d(this,y,!1)}async _initArrayTypes(){if(T(this,p))return;m(this,p,!0);let a=await this.query(`
      SELECT b.oid, b.typarray
      FROM pg_catalog.pg_type a
      LEFT JOIN pg_catalog.pg_type b ON b.oid = a.typelem
      WHERE a.typcategory = 'A'
      GROUP BY b.oid, b.typarray
      ORDER BY b.oid
    `);for(let r of a.rows)this.serializers[r.typarray]=t=>A(t,this.serializers[r.oid],r.typarray),this.parsers[r.typarray]=t=>B(t,this.parsers[r.oid],r.typarray)}async query(a,r,t){return await this._checkReady(),await this._runExclusiveTransaction(async()=>await e(this,s,w).call(this,a,r,t))}async sql(a,...r){let{query:t,params:l}=g(a,...r);return await this.query(t,l)}async exec(a,r){return await this._checkReady(),await this._runExclusiveTransaction(async()=>await e(this,s,u).call(this,a,r))}async transaction(a){return await this._checkReady(),await this._runExclusiveTransaction(async()=>{await e(this,s,u).call(this,"BEGIN"),m(this,y,!0);let r=!1,t=()=>{if(r)throw new Error("Transaction is closed")},l={query:async(i,n,b)=>(t(),await e(this,s,w).call(this,i,n,b)),sql:async(i,...n)=>{let{query:b,params:P}=g(i,...n);return await e(this,s,w).call(this,b,P)},exec:async(i,n)=>(t(),await e(this,s,u).call(this,i,n)),rollback:async()=>{t(),await e(this,s,u).call(this,"ROLLBACK"),r=!0},get closed(){return r}};try{let i=await a(l);return r||(r=!0,await e(this,s,u).call(this,"COMMIT")),m(this,y,!1),i}catch(i){throw r||await e(this,s,u).call(this,"ROLLBACK"),m(this,y,!1),i}})}};p=new WeakMap,y=new WeakMap,s=new WeakSet,o=async function(a,r={}){return await this.execProtocol(a,{...r,syncToFs:!1})},w=async function(a,r=[],t){return await this._runExclusiveQuery(async()=>{e(this,s,R).call(this,"runQuery",a,r,t),await this._handleBlob(t?.blob);let l;try{let n=await e(this,s,o).call(this,c.parse({text:a,types:t?.paramTypes}),t),b=v((await e(this,s,o).call(this,c.describe({type:"S"}),t)).map(([h])=>h)),P=r.map((h,Q)=>{let q=b[Q];if(h==null)return null;let x=this.serializers[q];return x?x(h):h.toString()});l=[...n,...await e(this,s,o).call(this,c.bind({values:P}),t),...await e(this,s,o).call(this,c.describe({type:"P"}),t),...await e(this,s,o).call(this,c.execute({}),t)]}finally{await e(this,s,o).call(this,c.sync(),t)}await this._cleanupBlob(),T(this,y)||await this.syncToFs();let i=await this._getWrittenBlob();return f(l.map(([n])=>n),this.parsers,t,i)[0]})},u=async function(a,r){return await this._runExclusiveQuery(async()=>{e(this,s,R).call(this,"runExec",a,r),await this._handleBlob(r?.blob);let t;try{t=await e(this,s,o).call(this,c.query(a),r)}finally{await e(this,s,o).call(this,c.sync(),r)}this._cleanupBlob(),T(this,y)||await this.syncToFs();let l=await this._getWrittenBlob();return f(t.map(([i])=>i),this.parsers,r,l)})},R=function(...a){this.debug>0&&console.log(...a)};export{z as a};
//# sourceMappingURL=chunk-PKPYJS5H.js.map